name: Entrega Continua

on:
 workflow_call:

jobs:
  ECS:
    runs-on: ubuntu-latest
    steps:
    - name: Configurando as credenciais AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_CHAVE_ACESSO }}
        aws-secret-access-key: ${{ secrets.AWS_CHAVE_ACESSO_SECRETA }}
        aws-region: us-east-2

    - name: AWS describe task definition
      run: aws ecs describe-task-definition --task-definition TAREFA_API-GO --query taskDefinition > task-definition.json

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
#Durante o curso nÃ£o foi adicionado esse build
   # - name: Build, tag, and push image to Amazon ECR
   #   id: build-image
   #   env:
   #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
   #     ECR_REPOSITORY: my-ecr-repo
   #     IMAGE_TAG: ${{ github.sha }}
   #   run: |
   #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
   #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
   #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: Go
        image: cristyanbf/testeci:latest
        environment-variables: |
          HOST=${{ secrets.DBHOST }}
          USER=${{ secrets.DBUSER }}
          PASSWORD=${{ secrets.DBPASSWORD}}
          DBNAME=${{ secrets.DBNAME }}
          DBPORT=${{ secrets.DBPORT }}
          PORT=8000

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: SERVICO_API-Go
        cluster: API-GO
        wait-for-service-stability: true
